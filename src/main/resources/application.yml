camel:
  springboot:
    # The Camel context name
    name: CamelRestSql
  component:
    quartz2:
      enabled: true
      enable-jmx: false
      resolve-property-placeholders: true
#      properties-file: quartz2.properties
      properties:
        org.quartz.scheduler.skipUpdateCheck: "true"
        org.quartz.scheduler.instanceName: spring-boot-camel-rest-sql
        org.quartz.scheduler.instanceId: AUTO
        org.quartz.scheduler.jobFactory.class: org.quartz.simpl.SimpleJobFactory
        org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
        org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
        org.quartz.jobStore.useProperties: "false"
        org.quartz.jobStore.dataSource: myDS
        org.quartz.jobStore.tablePrefix: QRTZ_
        org.quartz.jobStore.isClustered: "true"
        org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
        org.quartz.threadPool.threadCount: "10"
        org.quartz.jobStore.clusterCheckinInterval: "20000"
        org.quartz.dataSource.myDS.driver: com.mysql.jdbc.Driver
        org.quartz.dataSource.myDS.URL: jdbc:mysql://${${mysql.service.name}.service.host}:${${mysql.service.name}.service.port}/${mysql.service.database}?useSSL=false
        org.quartz.dataSource.myDS.user: ${mysql.service.username}
        org.quartz.dataSource.myDS.password: ${mysql.service.password}
        org.quartz.dataSource.myDS.maxConnections: "12"

    servlet:
      mapping:
        enabled: true
        context-path: /camel-rest-sql/*

# Binding health checks to a different port
management:
  port: 8081

# disable all management enpoints except health
endpoints:
  enabled: false
  health:
    enabled: true

mysql:
  service:
    # The name of the service hosting the MySQL database server,
    # can be customized using the 'MYSQL_SERVICE_NAME' env variable to use a different service
    # name:     mysql
    name: ${MYSQL_SERVICE_NAME}
    # The database to use, can be customized using the 'MYSQL_SERVICE_DATABASE' env variable
    database: ${MYSQL_SERVICE_DATABASE}

spring:
  # Spring JDBC configuration
  datasource:
    url:      jdbc:mysql://${${mysql.service.name}.service.host}:${${mysql.service.name}.service.port}/${mysql.service.database}?useSSL=false
    username: ${mysql.service.username}
    password: ${mysql.service.password}
    driver-class-name: com.mysql.jdbc.Driver


# The application configuration properties
quickstart:
  generateOrderPeriod: 10s
  processOrderPeriod: 30s
